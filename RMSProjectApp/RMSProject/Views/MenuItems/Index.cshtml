@model IEnumerable<RMSProject.Models.MenuItem>

@{
    ViewData["Title"] = "Home Page";
}

<h1>Home Page - All Menu Items</h1>
<partial name="_Notification" />
<hr />
@* Change to button *@
<p><a asp-action="Create">Add New Menu Item</a></p>

@*
    HttpGet method used here to capture that search information in the URL to bookmark or share with others.
    Otherwise, the information would be sent with the request body to the server.
*@
<form asp-controller="MenuItems" asp-action="Index" method="get" class="d-flex flex-md-shrink-1">

    <lable for="searchString" class="my-auto me-2">Item to search for:</lable>
    <input type="text" class="mx-sm-1" name="SearchString" value=@ViewData["SearchString"] placeholder="Menu Item name..." />
    <input type="submit" value="Filter" class="btn btn-primary mx-sm-2" />
    <input type="submit" asp-controller="MenuItems" asp-action="Index" class="btn btn-secondary" value="Back" />

</form>

<table class="table my-4">
    <thead>
        <tr class="table-primary">
            <th>
                <a asp-action="Index" asp-route-sortByKey="@ViewData["ItemName"]">@Html.DisplayNameFor(model => model.ItemName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortByKey="@ViewData["ItemPrice"]">@Html.DisplayNameFor(model => model.ItemPrice)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortByKey="@ViewData["TypeOfMeal"]">@Html.DisplayNameFor(model => model.TypeOfMeal)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemDescription)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td width="15%">
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td width="15%">
                    @Html.DisplayFor(modelItem => item.ItemPrice)
                </td>
                <td width="10%">
                    @Html.DisplayFor(modelItem => item.TypeOfMeal)
                </td>
                <td width="20%">
                    @Html.DisplayFor(modelItem => item.ItemDescription)
                </td>

                <td width="15%">
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
